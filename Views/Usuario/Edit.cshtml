@model mi_ferreteria.ViewModels.UsuarioFormViewModel
@{
    ViewData["Title"] = "Editar Usuario";
}
<h2>Editar Usuario</h2>
<div class="text-danger">@Html.ValidationSummary()</div>
<form asp-action="Edit" method="post" data-unsaved-warning="true">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="OriginalHash" />
    <div class="mb-3">
        <label class="form-label">Nombre</label>
        <input asp-for="Nombre" class="form-control" />
        <span asp-validation-for="Nombre" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="alert alert-secondary">
        <div class="mb-2"><strong>Cambiar contraseña (opcional)</strong></div>
        <div class="mb-2">
            <label class="form-label">Nueva contraseña</label>
            <input asp-for="Password" class="form-control" type="password" autocomplete="new-password" />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="mb-2">
            <label class="form-label">Confirmar contraseña</label>
            <input asp-for="ConfirmPassword" class="form-control" type="password" autocomplete="new-password" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
        <small class="text-muted">Dejar vacío para mantener la contraseña actual.</small>
    </div>
    <div class="mb-4">
        <label class="form-label d-block">Estado de usuario</label>
        <div class="form-check form-switch">
            <input class="form-check-input" asp-for="Activo" type="checkbox" role="switch" id="usuarioActivoEdit" />
            <label class="form-check-label" for="usuarioActivoEdit">Activo</label>
        </div>
    </div>
    <div class="mb-4">
        <label class="form-label">Seleccione rol</label>
        <div class="row g-3">
            @foreach (var rol in Model.RolesDisponibles)
            {
                <div class="col-12 col-sm-6 col-lg-4">
                    <input class="role-check d-none" type="checkbox" id="role_edit_@rol.Id" name="RolesIds" value="@rol.Id" @(Model.RolesIds.Contains(rol.Id) ? "checked" : "") />
                    <label class="role-card w-100" for="role_edit_@rol.Id">
                        <div class="name">@rol.Nombre</div>
                        <div class="desc text-muted">@rol.Descripcion</div>
                    </label>
                </div>
            }
        </div>
    </div>
    <div class="d-flex justify-content-center gap-2 mt-4">
        <button type="submit" class="btn btn-primary px-5">Guardar</button>
        <a asp-action="Index" class="btn btn-outline-secondary px-5">Volver</a>
    </div>
</form>

@section Scripts {
    <script>
        (function(){
            let isDirty = false;
            const form = document.querySelector('form[asp-action="Edit"]') || document.querySelector('form');
            if (!form) return;
            form.addEventListener('input', () => { isDirty = true; }, { capture: true });
            form.addEventListener('change', () => { isDirty = true; }, { capture: true });
            form.addEventListener('submit', () => { isDirty = false; });
            window.addEventListener('beforeunload', function (e) {
                if (!isDirty) return;
                e.preventDefault();
                e.returnValue = '';
            });
            document.querySelectorAll('.btn-cancel-leave').forEach(function(a){
                a.addEventListener('click', function(e){
                    if (isDirty && !confirm('Hay cambios sin guardar. Si vuelves, se perderán. ¿Deseas salir igualmente?')) {
                        e.preventDefault();
                    }
                });
            });
        })();
    </script>
    <script>
        (function(){
            const form = document.querySelector('form[asp-action="Edit"]') || document.querySelector('form');
            if (!form) return;
            const targets = form.querySelectorAll('input[type="password"][name="Password"], input[type="password"][name="ConfirmPassword"]');
            targets.forEach(function(input){
                // Wrap input inside Bootstrap input-group
                const wrapper = document.createElement('div');
                wrapper.className = 'input-group';
                input.parentNode.insertBefore(wrapper, input);
                wrapper.appendChild(input);

                const btn = document.createElement('button');
                btn.type = 'button';
                btn.className = 'btn btn-outline-secondary';
                btn.textContent = 'Mostrar';
                btn.setAttribute('data-generated','password-toggle');
                btn.addEventListener('click', function(){
                    const show = input.type === 'password';
                    input.type = show ? 'text' : 'password';
                    btn.textContent = show ? 'Ocultar' : 'Mostrar';
                });
                wrapper.appendChild(btn);
            });
        })();
    </script>
}
